/*
 * Corpora API
 *
 * API for managing and processing corpora
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FileResponseSchema {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "corpus_id")]
    pub corpus_id: uuid::Uuid,
    #[serde(rename = "path")]
    pub path: String,
    #[serde(rename = "content")]
    pub content: String,
    #[serde(rename = "checksum")]
    pub checksum: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
}

impl FileResponseSchema {
    pub fn new(
        id: uuid::Uuid,
        corpus_id: uuid::Uuid,
        path: String,
        content: String,
        checksum: String,
        created_at: String,
        updated_at: String,
    ) -> FileResponseSchema {
        FileResponseSchema {
            id,
            corpus_id,
            path,
            content,
            checksum,
            created_at,
            updated_at,
        }
    }
}
