/*
 * Corpora API
 *
 * API for managing and processing corpora
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DraftSection {
    #[serde(rename = "section_id")]
    pub section_id: uuid::Uuid,
    #[serde(rename = "introduction")]
    pub introduction: String,
    #[serde(rename = "subsections")]
    pub subsections: Vec<models::DraftSubsection>,
}

impl DraftSection {
    pub fn new(
        section_id: uuid::Uuid,
        introduction: String,
        subsections: Vec<models::DraftSubsection>,
    ) -> DraftSection {
        DraftSection {
            section_id,
            introduction,
            subsections,
        }
    }
}
