services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    volumes:
      - .:/workspace
    environment:
      PYTHONPATH: "/workspace/py/packages"
      REDIS_URL: "redis://redis:6379/0"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      GITHUB_TOKEN: "${GITHUB_TOKEN}"
    command: python manage.py runserver 0.0.0.0:8877
    working_dir: /workspace/py/packages/corpora_proj
    depends_on:
      - db
      - redis
      - celery
    ports:
      - "8877:8877"

  celery:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    command: celery -A corpora_proj.celery_app.app worker --loglevel=info
    volumes:
      - .:/workspace
    environment:
      PYTHONPATH: "/workspace/py/packages"
      REDIS_URL: "redis://redis:6379/0"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
    depends_on:
      redis:
        condition: service_healthy

  db:
    build:
      context: .
      dockerfile: docker/Dockerfile.pgvector
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  interactive:
    build:
      context: .
      dockerfile: docker/Dockerfile
    volumes:
      - .:/workspace
    environment:
      PYTHONPATH: "/workspace/py/packages"
      CORPORA_CLIENT_ID: "${CORPORA_CLIENT_ID}"
      CORPORA_CLIENT_SECRET: "${CORPORA_CLIENT_SECRET}"
    command: sleep infinity
    working_dir: /workspace

volumes:
  postgres-data:
